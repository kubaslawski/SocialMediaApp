[{"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\index.js":"1","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\App.js":"2","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\reportWebVitals.js":"3","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\Login.js":"4","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\SignUp.js":"5","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\Home.js":"6","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Navbar.js":"7","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\api\\constants.js":"8","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Tweet.js":"9","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\AuthRoute.js":"10","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\store.js":"11","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\uiReducer.js":"12","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\dataReducer.js":"13","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\userReducer.js":"14","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\types.js":"15","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\actions\\userActions.js":"16","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Profile.js":"17","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\EditDetails.js":"18","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\myButton.js":"19","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\MyButton.js":"20","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\actions\\dataActions.js":"21","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\DeleteTweet.js":"22","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\PostTweet.js":"23","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\TweetDialog.js":"24","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\LikeButton.js":"25","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Comments.js":"26","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\CommentForm.js":"27","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\User.js":"28","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\StaticProfile.js":"29"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":2136,"mtime":1607996753197,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":4491,"mtime":1607566133854,"results":"34","hashOfConfig":"31"},{"size":5666,"mtime":1607566137337,"results":"35","hashOfConfig":"31"},{"size":1309,"mtime":1607861267865,"results":"36","hashOfConfig":"31"},{"size":2036,"mtime":1607913486475,"results":"37","hashOfConfig":"31"},{"size":81,"mtime":1607451699429,"results":"38","hashOfConfig":"31"},{"size":3266,"mtime":1607950287904,"results":"39","hashOfConfig":"31"},{"size":573,"mtime":1607566100060,"results":"40","hashOfConfig":"31"},{"size":676,"mtime":1607564701855,"results":"41","hashOfConfig":"31"},{"size":930,"mtime":1607946328688,"results":"42","hashOfConfig":"31"},{"size":1879,"mtime":1607954112723,"results":"43","hashOfConfig":"31"},{"size":1428,"mtime":1607861450329,"results":"44","hashOfConfig":"31"},{"size":780,"mtime":1607953798067,"results":"45","hashOfConfig":"31"},{"size":2436,"mtime":1607610148785,"results":"46","hashOfConfig":"31"},{"size":6051,"mtime":1607696815142,"results":"47","hashOfConfig":"31"},{"size":6289,"mtime":1607696901986,"results":"48","hashOfConfig":"31"},{"size":397,"mtime":1607696209842,"results":"49","hashOfConfig":"31"},{"size":439,"mtime":1607696957237,"results":"50","hashOfConfig":"31"},{"size":3547,"mtime":1607997094430,"results":"51","hashOfConfig":"31"},{"size":2519,"mtime":1607863950244,"results":"52","hashOfConfig":"31"},{"size":5448,"mtime":1607946174455,"results":"53","hashOfConfig":"31"},{"size":6529,"mtime":1607996533499,"results":"54","hashOfConfig":"31"},{"size":2011,"mtime":1607951943241,"results":"55","hashOfConfig":"31"},{"size":4586,"mtime":1607955287382,"results":"56","hashOfConfig":"31"},{"size":4956,"mtime":1607956009948,"results":"57","hashOfConfig":"31"},{"size":1742,"mtime":1608126912814,"results":"58","hashOfConfig":"31"},{"size":3405,"mtime":1608126920602,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9sr8t8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\index.js",[],["130","131"],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\App.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\reportWebVitals.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\Login.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\SignUp.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\Home.js",["132","133"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n//URL\r\nimport {URL} from \"../api/constants\";\r\n//Components\r\nimport Tweet from \"../components/Tweet\";\r\nimport Profile from \"../components/Profile\";\r\n//REDUX\r\nimport {connect} from 'react-redux';\r\nimport {getTweets} from '../redux/actions/dataActions';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        tweets: null\r\n    }\r\n    componentDidMount(){\r\n        this.props.getTweets();\r\n    }\r\n    render() {\r\n        const {tweets, loading} = this.props.data;\r\n        let recentTweetMarkup = !loading ? (\r\n        tweets.map(tweet => <Tweet key={tweet.tweetId} tweet={tweet}></Tweet>)\r\n        ) : <p>Loading...</p>\r\n        return (\r\n            <Grid container>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentTweetMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile/>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    getTweets: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTweets})(Home);\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Navbar.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\api\\constants.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Tweet.js",["134","135","136"],"import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from './MyButton';\r\nimport DeleteTweet from './DeleteTweet';\r\nimport TweetDialog from './TweetDialog';\r\nimport LikeButton from './LikeButton';\r\n//MUI Stuff\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n//Icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n//Redux\r\nimport {connect} from 'react-redux';\r\nimport { Favorite } from '@material-ui/icons';\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Tweet extends Component {\r\n\r\n\r\n    render() { \r\n\r\n        dayjs.extend(relativeTime)\r\n        const {classes, tweet: { \r\n            content, \r\n            createdAt, \r\n            userImage, \r\n            user, \r\n            tweetId, \r\n            likeCount, \r\n            commentCount},\r\n            user: {\r\n                authenticated,\r\n                credentials: {\r\n                    handle\r\n                }\r\n            }\r\n        } = this.props\r\n\r\n\r\n\r\n        const deleteButton = authenticated && handle === user ? (\r\n            <DeleteTweet tweetId={tweetId}/>\r\n        ) : null\r\n\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                image={userImage}\r\n                title=\"Profile image\"\r\n                className={classes.image}/>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" color=\"primary\" component={Link} to={`/users/${user}`}>\r\n                        {user}\r\n                    </Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).fromNow()}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        {content}\r\n                    </Typography>\r\n                    <LikeButton tweetId={tweetId}/>\r\n                    <span>{likeCount} Likes here</span>\r\n                    <MyButton tip=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                    <TweetDialog tweetId={tweetId} user={user}/>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nTweet.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    tweet: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Tweet))\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\AuthRoute.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\store.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\uiReducer.js",["137"],"import  {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n            case CLEAR_ERRORS:\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    errors: null\r\n                };\r\n            case LOADING_UI:\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n            case STOP_LOADING_UI:\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n            default:\r\n                return state\r\n    }   \r\n}","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\dataReducer.js",["138"],"import {SET_TWEETS, SET_TWEET, LIKE_TWEET, UNLIKE_TWEET, LOADING_DATA, DELETE_TWEET, POST_TWEET, SUBMIT_COMMENT} from '../types';\r\n\r\nconst initialState = {\r\n    tweets: [],\r\n    tweet: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_TWEETS:\r\n            return {\r\n                ...state,\r\n                tweets: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_TWEET:\r\n            return {\r\n                ...state,\r\n                tweet: action.payload\r\n            }\r\n        case LIKE_TWEET:\r\n        case UNLIKE_TWEET:\r\n            let index = state.tweets.findIndex((tweet) => tweet.tweetId === action.payload.tweetId);\r\n            state.tweets[index] = action.payload;\r\n            if(state.tweet.tweetId === action.payload.tweetId){\r\n                state.tweet = action.payload;\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                tweet: {\r\n                    ...state.tweet,\r\n                    comments: [action.payload, ...state.tweet.comments]\r\n                }\r\n            }\r\n        case DELETE_TWEET:\r\n            let index1 = state.tweets.findIndex(\r\n            (tweet) => tweet.tweetId === action.payload\r\n            );\r\n            state.tweets.splice(index1, 1);\r\n            return {\r\n              ...state\r\n            };\r\n        case POST_TWEET:\r\n            return {\r\n                ...state,\r\n                tweets: [\r\n                    action.payload,\r\n                    ...state.tweets\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\reducers\\userReducer.js",["139"],"import {SET_USER, \r\n    SET_AUTHENTICATED, \r\n    SET_UNATHENTICATED,\r\n    LOADING_USER,\r\n    LIKE_TWEET,\r\n    UNLIKE_TWEET\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false, \r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,                \r\n            };\r\n        case SET_UNATHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LIKE_TWEET:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        user: state.credentials.handle,\r\n                        tweetId: action.payload.tweetId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_TWEET:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(like => like.tweetId !== action.payload.tweetId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\types.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Profile.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\EditDetails.js",["140","141"],"import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from './MyButton';\r\n//REDUX\r\nimport {connect} from 'react-redux';\r\nimport {editUserDetails} from '../redux/actions/userActions';\r\n//MUI\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n//Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n      padding: 20,\r\n      margin: '0 0 0 20px',\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    }\r\n  });\r\n\r\nclass EditDetails extends Component {\r\n    state = {\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n        open: false\r\n    };\r\n\r\n    mapUserDetailsToState = credentials => {\r\n        this.setState({\r\n            bio: credentials.bio ?  credentials.bio : '',\r\n            website: credentials.website ?  credentials.website : '',\r\n            location: credentials.location ?  credentials.location : '',\r\n        });\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {credentials} = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        });\r\n      };\r\n    \r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        }\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <MyButton tip=\"Edit details\" onClick={this.handleOpen} btnClassName={classes.button}>\r\n                        <EditIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <Dialog \r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\">\r\n                        <DialogTitle>\r\n                            Edit your details\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <form>\r\n                                <TextField\r\n                                name=\"bio\"\r\n                                type=\"text\"\r\n                                label=\"Bio\"\r\n                                placeholder=\"A short bio about urself\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                className={classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                                <TextField\r\n                                name=\"website\"\r\n                                type=\"text\"\r\n                                label=\"Website\"\r\n                                placeholder=\"Your personal/professional website\"\r\n                                className={classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                                <TextField\r\n                                name=\"location\"\r\n                                type=\"text\"\r\n                                label=\"Location\"\r\n                                placeholder=\"Where you live\"\r\n                                className={classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                            </form>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} color=\"primary\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails))\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\myButton.js",["142"],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\MyButton.js",["143"],"import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nexport default ({children, onClick, tip, btnClassName, tipClassName }) => {\r\n    return (\r\n        <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n    )\r\n}\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\redux\\actions\\dataActions.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\DeleteTweet.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\PostTweet.js",["144","145","146","147"],"import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from './MyButton';\r\n//MUI\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n//REDUX\r\nimport {connect} from 'react-redux';\r\nimport {postTweet, clearErrors} from '../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n      padding: 20,\r\n      margin: '0 0 0 20px'\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    }\r\n  });\r\n\r\nclass PostTweet extends Component {\r\n    state = {\r\n        open: false,\r\n        content: '',\r\n        errors: {}\r\n    };\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            })\r\n        };\r\n        if(!nextProps.errors && !nextProps.UI.loading){\r\n            this.setState({content: '', open: false, errors: {}});\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true})\r\n    }\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({open: false, errors: {}})\r\n    }\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value})\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.postTweet({content: this.state.content})\r\n    }\r\n\r\n    render(){\r\n        const { errors } = this.state;\r\n        const { classes, UI: { loading }} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"Post a tweet!\">\r\n                    <AddIcon color=\"primary\"/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogTitle>\r\n                        Post a new tweet\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField \r\n                            name=\"content\"\r\n                            type=\"text\"\r\n                            label=\"Tweet\"\r\n                            multine\r\n                            rows=\"3\"\r\n                            placeholder=\"Tweet something\"\r\n                            error={errors.content ? true : false}\r\n                            helperText={errors.content}\r\n                            className={classes.textField}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            />\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                                className={classes.submitButton} disabled={loading}>\r\n                                    Submit\r\n                                    {loading && (\r\n                                        <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                                    )}\r\n                                </Button>\r\n                            </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPostTweet.propTypes = {\r\n    postTweet: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postTweet, clearErrors})(withStyles(styles)(PostTweet))\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\TweetDialog.js",["148","149","150","151","152"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"./MyButton\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {URL} from '../api/constants';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n//MUI STUFF\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//Icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { getTweet, clearErrors } from \"../redux/actions/dataActions\";\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n      padding: 20,\r\n      margin: '0 0 0 20px'\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    visibleSeparator: {\r\n      width: '100%',\r\n      borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\r\n      marginBottom: 20\r\n    },\r\n    commentData: {\r\n      marginLeft: 20\r\n    }\r\n  });\r\n\r\nclass PostDialog extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n    this.props.getTweet(this.props.tweetId);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      tweet: {\r\n        tweetId,\r\n        content,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImage,\r\n        user,\r\n        comments\r\n      },\r\n      UI: { loading },\r\n    } = this.props;\r\n\r\n    const dialogMarkup = loading ? (\r\n        <div className={classes.spinnerDiv}>\r\n            <CircularProgress size={200} thickness={2}/>\r\n        </div>\r\n    ) : (\r\n        <Grid container spacing={16}>\r\n            <Grid item sm={5}>\r\n                <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\r\n            </Grid>\r\n            <Grid item sm={7}>\r\n                <Typography\r\n                    component={Link}\r\n                    color=\"primary\"\r\n                    variant=\"h5\"\r\n                    to={`${URL}/users/${user}`}>\r\n                        @{user}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator}/>\r\n                    <Typography variant=\"body1\">\r\n                        {content}\r\n                    </Typography>\r\n                    <LikeButton tweetId={tweetId}/>\r\n                    <span>{likeCount} likes</span>\r\n                    <MyButton tip=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n            </Grid>\r\n            <hr className={classes.invisibleSeparator}/>\r\n            <CommentForm tweetId={tweetId}/>\r\n            <Comments comments={comments}/>\r\n        </Grid>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <MyButton onClick={this.handleOpen} tip=\"Expand tweet\" tipClassName={classes.expandButton}>\r\n                <UnfoldMore color=\"primary\"/>\r\n            </MyButton>\r\n            <Dialog  open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                    <CloseIcon/>\r\n                </MyButton>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    {dialogMarkup}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nPostDialog.propTypes = {\r\n  getTweet: PropTypes.func.isRequired,\r\n  tweetId: PropTypes.string.isRequired,\r\n  user: PropTypes.string.isRequired,\r\n  tweet: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  clearErrors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tweet: state.data.tweet,\r\n  UI: state.UI,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTweet,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(PostDialog));\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\LikeButton.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\Comments.js",["153","154"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Link} from 'react-router-dom';\r\nimport {URL} from '../api/constants';\r\nimport dayjs from 'dayjs';\r\n//MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n      padding: 20,\r\n      margin: '0 0 0 20px'\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    visibleSeparator: {\r\n      width: '100%',\r\n      borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\r\n      marginBottom: 20\r\n    }\r\n  });\r\n\r\nclass Comments extends Component {\r\n    render(){\r\n        const {comments, classes} = this.props;\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const {content, createdAt, userImage, userHandle} = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography\r\n                                                variant=\"h5\"\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                                color=\"primary\">\r\n                                                    @{userHandle}\r\n                                            </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                        </Typography>\r\n                                        <hr className={classes.invisibleSeparator}/>\r\n                                        <Typography variant=\"body1\">{content}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length - 1 && (\r\n                                <hr className={classes.visibleSeparator}/>\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments)","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\CommentForm.js",["155","156","157","158"],"import React, { Component } from 'react';\r\nimport MyButton from './MyButton';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n//Mui\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {submitComment} from '../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n      padding: 20,\r\n      margin: '0 0 0 20px'\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: theme.palette.primary.main\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    },\r\n    invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    },\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    visibleSeparator: {\r\n      width: '100%',\r\n      borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\r\n      marginBottom: 20\r\n    },\r\n    commentImage: {\r\n      maxWidth: '100%',\r\n      height: 100,\r\n      objectFit: 'cover',\r\n      borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n      marginLeft: 20\r\n    }\r\n  });\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        content: '',\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors})\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({ content: ''})\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.submitComment(this.props.tweetId, {content: this.state.content})\r\n    }\r\n\r\n    render() {\r\n        const {classes, authenticated} = this.props;\r\n        const errors = this.state.errors\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{textAlign: 'center'}}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField \r\n                        name=\"content\"\r\n                        type=\"text\"\r\n                        label=\"Comment on tweet\"\r\n                        // error={errors.comment ? true : false}\r\n                        // helperText={errors.comment}\r\n                        value={this.state.content}\r\n                        onChange={this.handleChange}\r\n                        fullWidth \r\n                        className={classes.textField}\r\n                        />\r\n                        <Button type=\"submit\" \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                </form>\r\n                <hr className={classes.visibleSeparator}/>\r\n            </Grid>\r\n        ) : null\r\n        \r\n        return commentFormMarkup;\r\n\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    tweetId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI, \r\n    authenticated: state.user.authenticated\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\r\n","C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\pages\\User.js",[],"C:\\Users\\kubas\\Desktop\\Projects_React\\social-media-app\\src\\components\\StaticProfile.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"163","severity":1,"message":"167","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":12},{"ruleId":"163","severity":1,"message":"168","line":13,"column":8,"nodeType":"165","messageId":"166","endLine":13,"endColumn":22},{"ruleId":"163","severity":1,"message":"169","line":14,"column":8,"nodeType":"165","messageId":"166","endLine":14,"endColumn":19},{"ruleId":"163","severity":1,"message":"170","line":22,"column":10,"nodeType":"165","messageId":"166","endLine":22,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":8,"column":1,"nodeType":"173","endLine":35,"endColumn":2},{"ruleId":"171","severity":1,"message":"172","line":9,"column":1,"nodeType":"173","endLine":64,"endColumn":2},{"ruleId":"171","severity":1,"message":"172","line":16,"column":1,"nodeType":"173","endLine":55,"endColumn":2},{"ruleId":"163","severity":1,"message":"174","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":15},{"ruleId":"163","severity":1,"message":"175","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":18},{"ruleId":"171","severity":1,"message":"176","line":6,"column":1,"nodeType":"173","endLine":12,"endColumn":2},{"ruleId":"171","severity":1,"message":"176","line":6,"column":1,"nodeType":"173","endLine":14,"endColumn":2},{"ruleId":"163","severity":1,"message":"174","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":15},{"ruleId":"163","severity":1,"message":"175","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":18},{"ruleId":"163","severity":1,"message":"177","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":21},{"ruleId":"163","severity":1,"message":"178","line":16,"column":8,"nodeType":"165","messageId":"166","endLine":16,"endColumn":16},{"ruleId":"163","severity":1,"message":"177","line":13,"column":8,"nodeType":"165","messageId":"166","endLine":13,"endColumn":21},{"ruleId":"163","severity":1,"message":"179","line":15,"column":8,"nodeType":"165","messageId":"166","endLine":15,"endColumn":19},{"ruleId":"163","severity":1,"message":"180","line":16,"column":8,"nodeType":"165","messageId":"166","endLine":16,"endColumn":17},{"ruleId":"163","severity":1,"message":"181","line":17,"column":8,"nodeType":"165","messageId":"166","endLine":17,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":102,"column":5,"nodeType":"184","messageId":"185","endLine":102,"endColumn":16},{"ruleId":"163","severity":1,"message":"167","line":5,"column":9,"nodeType":"165","messageId":"166","endLine":5,"endColumn":12},{"ruleId":"182","severity":1,"message":"183","line":85,"column":5,"nodeType":"184","messageId":"185","endLine":85,"endColumn":16},{"ruleId":"163","severity":1,"message":"186","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"187","line":3,"column":9,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":87,"column":5,"nodeType":"184","messageId":"185","endLine":87,"endColumn":16},{"ruleId":"163","severity":1,"message":"188","line":141,"column":15,"nodeType":"165","messageId":"166","endLine":141,"endColumn":21},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'URL' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Favorite' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","Assign arrow function to a variable before exporting as module default","'DialogActions' is defined but never used.","'EditIcon' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'closeButton'.","ObjectExpression","unexpected","'MyButton' is defined but never used.","'Link' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]